{"version":3,"sources":["util/config.ts","store/actionTypes.ts","store/actions/commonAction.ts","router/route.ts","router/asyncRouter.tsx","router/index.tsx","App.tsx","store/reducers/commonReducer.ts","store/reducers/index.ts","index.tsx","store/index.ts"],"names":["ELayoutMode","ETheme","Elanguage","config","layoutMode","left","fixHeader","theme","dark","language","ch","showFooter","initConfig","localconfig","localStorage","getItem","length","setItem","JSON","stringify","console","log","ETagTypes","NCommonActionTypes","NCommonAction","tag","type","UPD_TAGS","value","DEl_TAGS","ADD_TAGS","ERole","DashBoard","lazy","Error403","Error404","MenuLayout","routes","path","component","role","tour","admin","user","errorRoutes","AsyncRouter","props","exact","from","to","map","item","includes","AsyncComponent","key","render","fallback","Ss","React","connect","state","tagsState","commonReducer","dispatch","handleChange","update_tag","handleClick","add_tag","deleteList","delete_tag","combineReducers","action","filter","name","isOn","SEL_TAGS","rootReducer","ReactDOM","store","createStore","applyMiddleware","thunk","document","getElementById"],"mappings":"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","file":"static/js/main.55f7c08c.chunk.js","sourcesContent":["import { Layout } from 'antd';\nexport interface IConfig {\n  layoutMode: ELayoutMode;\n  fixHeader: TFixHeader;\n  theme: ETheme;\n  language: Elanguage;\n  showFooter: TShowFooter;\n}\nexport enum ELayoutMode {\n  top = 'top',\n  left = 'left'\n}\ntype TFixHeader = true | false;\ntype TShowFooter = true | false;\nexport enum ETheme {\n  dark = 'dark',\n  white = 'white'\n}\nexport enum Elanguage {\n  en = 'english',\n  ch = 'chinese'\n}\nexport let config: IConfig = {\n  layoutMode: ELayoutMode.left,\n  fixHeader: true,\n  theme: ETheme.dark,\n  language: Elanguage.ch,\n  showFooter: true\n};\nfunction initConfig() {\n  let localconfig = localStorage.getItem('config');\n  if (!localconfig || (localconfig && localconfig.length < 9)) {\n    //undefined length 9\n    localStorage.setItem('config', JSON.stringify(config));\n    console.log(11);\n  }\n}\nexport function resetConfig() {\n  localStorage.setItem('config', JSON.stringify(config));\n}\nexport function getConfigFromLocalStorage(): IConfig {\n  let localConfig = localStorage.getItem('config');\n  if (localConfig) setConfig(JSON.parse(localConfig));\n  return config;\n}\nfunction setConfig(localconfig: IConfig) {\n  config = localconfig;\n}\nexport default initConfig;\n","/*common*/\nexport namespace NCommonActionTypes {\n  /*导航头处的tag标签 */\n  export enum ETagTypes {\n    DEl_TAGS = 'DEl_TAGS',\n    UPD_TAGS = 'UPD_TAGS',\n    ADD_TAGS = 'ADD_TAGS',\n    SEL_TAGS = 'SEL_TAGS'\n  }\n}\n","import { NCommonActionTypes } from '../actionTypes';\nimport { NCommonModal } from '../modal/commonModal';\nexport namespace NCommonAction {\n  export function update_tag(tag: NCommonModal.IHeaderTag): NCommonModal.IHeaderTagAction {\n    return {\n      type: NCommonActionTypes.ETagTypes.UPD_TAGS,\n      value: tag\n    };\n  }\n  export function delete_tag(tag: NCommonModal.IHeaderTag): NCommonModal.IHeaderTagAction {\n    return {\n      type: NCommonActionTypes.ETagTypes.DEl_TAGS,\n      value: tag\n    };\n  }\n  export function add_tag(tag: NCommonModal.IHeaderTag): NCommonModal.IHeaderTagAction {\n    return {\n      type: NCommonActionTypes.ETagTypes.ADD_TAGS,\n      value: tag\n    };\n  }\n}\n","import { lazy, LazyExoticComponent, FunctionComponent } from 'react';\nconst DashBoard = lazy(() => import('../pages/dashBoard'));\nconst Error403 = lazy(() => import('../pages/error/403'));\nconst Error404 = lazy(() => import('../pages/error/404'));\nconst MenuLayout = lazy(() => import('../layout/menuLayout/index'));\n\nexport interface IRoute {\n  path: string;\n  role: string[];\n  component?: LazyExoticComponent<FunctionComponent>;\n}\n\nexport enum ERole {\n  tour = 'tour',\n  admin = 'admin',\n  user = 'user'\n}\nlet routes: IRoute[] = [\n  {\n    path: '/dashboard',\n    component: DashBoard,\n    role: [ERole.tour, ERole.admin, ERole.user]\n  },\n  {\n    path: '/menuLayout',\n    component: MenuLayout,\n    role: [ERole.tour, ERole.admin, ERole.user]\n  }\n];\nexport const errorRoutes: IRoute[] = [\n  {\n    path: '/error/403',\n    role: [ERole.tour, ERole.admin, ERole.user],\n    component: Error403\n  },\n  {\n    path: '/error/404',\n    role: [ERole.tour, ERole.admin, ERole.user],\n    component: Error404\n  }\n];\nexport default routes;\n","import React, { Suspense } from 'react';\nimport { Route, Redirect, Switch } from 'react-router-dom';\nimport routes, { errorRoutes } from './route';\nconst AsyncRouter = (props: any) => {\n  let token = '321312';\n  let role = 'admin';\n  return (\n    <div>\n      <Switch>\n        <Redirect exact from=\"/\" to=\"/dashboard\" />\n        {routes.map((item) => {\n          if (item.role.includes(role)) {\n            let AsyncComponent = item.component;\n            return (\n              <Route\n                exact\n                key={item.path}\n                path={item.path}\n                render={() => {\n                  return (\n                    <Suspense fallback={<div>123</div>}>\n                      {AsyncComponent ? <AsyncComponent /> : null}\n                    </Suspense>\n                  );\n                }}\n              />\n            );\n          } else {\n            return (\n              <Route\n                key={errorRoutes[0].path}\n                render={() => {\n                  let Error403 = errorRoutes[0].component;\n                  return (\n                    <Suspense fallback={<div>123</div>}>{Error403 ? <Error403 /> : null}</Suspense>\n                  );\n                }}\n              />\n            );\n          }\n        })}\n        <Route\n          key={errorRoutes[1].path}\n          render={() => {\n            let Error404 = errorRoutes[1].component;\n            return <Suspense fallback={<div>123</div>}>{Error404 ? <Error404 /> : null}</Suspense>;\n          }}\n        />\n      </Switch>\n    </div>\n  );\n};\nexport default AsyncRouter;\n","import React, { Suspense } from 'react';\nimport { HashRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport Login from '../pages/login';\nimport AsyncRouter from './asyncRouter';\nconst Ss = React.lazy(() => import('../pages/login'));\nexport default () => {\n  let token = '321';\n  return (\n    <HashRouter>\n      <Switch>\n        <Route\n          exact\n          path=\"/login\"\n          render={() => {\n            return (\n              <Suspense fallback={<div>wait</div>}>\n                <Ss />\n              </Suspense>\n            );\n          }}\n        ></Route>\n        <Route\n          path=\"/\"\n          render={() => {\n            if (token) {\n              return <AsyncRouter />;\n            } else {\n              return <Redirect to=\"/login\" />;\n            }\n          }}\n        />\n      </Switch>\n    </HashRouter>\n  );\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport { IRootState } from './store/reducers';\nimport './App.scss';\nimport { NCommonAction } from './store/actions/commonAction';\nimport { NCommonModal } from './store/modal/commonModal';\nimport { Button } from 'antd';\nimport { ICommonState } from './store/reducers/commonReducer';\nimport Router from './router/index';\ntype IProps = ReturnType<typeof mapStateToProps> & ReturnType<typeof mapDispatchToProps>;\nconst App: React.FC<IProps> = (props) => {\n  return (\n    <>\n      <Router />\n    </>\n  );\n};\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    handleChange(value: NCommonModal.IHeaderTag) {\n      return dispatch(NCommonAction.update_tag(value));\n    },\n    handleClick(value: NCommonModal.IHeaderTag) {\n      return dispatch(NCommonAction.add_tag(value));\n    },\n\n    deleteList(value: NCommonModal.IHeaderTag) {\n      return dispatch(NCommonAction.delete_tag(value));\n    }\n  };\n};\nconst mapStateToProps = (state: IRootState): ICommonState => {\n  return {\n    tagsState: state.commonReducer.tagsState\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { NCommonModal } from '../modal/commonModal';\nimport { NCommonActionTypes } from '../actionTypes';\nimport { combineReducers } from 'redux';\nexport function tagsReducer(\n  state: NCommonModal.IHeaderTag[] = [],\n  action: NCommonModal.IHeaderTagAction\n): NCommonModal.IHeaderTag[] {\n  switch (action.type) {\n    case NCommonActionTypes.ETagTypes.ADD_TAGS: {\n      return [...state, action.value];\n    }\n    case NCommonActionTypes.ETagTypes.DEl_TAGS: {\n      return state.filter((item) => {\n        return item.name !== action.value.name;\n      });\n    }\n    case NCommonActionTypes.ETagTypes.UPD_TAGS: {\n      return state.map((item) => {\n        if (item.name === action.value.name) {\n          return { ...item, isOn: !item.isOn };\n        }\n        return item;\n      });\n    }\n    case NCommonActionTypes.ETagTypes.SEL_TAGS: {\n      return state;\n    }\n    default:\n      return state;\n  }\n}\nlet commonReducer = combineReducers<ICommonState>({\n  tagsState: tagsReducer\n});\nexport interface ICommonState {\n  tagsState: NCommonModal.IHeaderTag[];\n}\nexport default commonReducer;\n","import { combineReducers } from 'redux';\nimport commonReducer, { ICommonState } from './commonReducer';\n\nexport const rootReducer = combineReducers<IRootState>({\n  commonReducer: commonReducer\n});\nexport interface IRootState {\n  commonReducer: ICommonState;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport Store from './store/index';\nimport 'normalize.css/normalize.css';\nimport 'antd/dist/antd.css';\nimport initConfig from './util/config';\ninitConfig();\nReactDOM.render(\n  <Provider store={Store()}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n","import { createStore, applyMiddleware, Store } from 'redux';\nimport thunk from 'redux-thunk';\nimport { rootReducer, IRootState } from './reducers/index';\nexport default function store(): Store<IRootState> {\n  return {\n    ...createStore(rootReducer, applyMiddleware(thunk))\n  };\n}\n"],"sourceRoot":""}