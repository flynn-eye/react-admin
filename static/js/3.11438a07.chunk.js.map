{"version":3,"sources":["../node_modules/process/browser.js","../node_modules/gl-matrix/esm/common.js","../node_modules/gl-matrix/esm/vec2.js","../node_modules/gl-matrix/esm/mat4.js","../node_modules/gl-matrix/esm/vec3.js","../node_modules/gl-matrix/esm/vec4.js","../node_modules/d3-interpolate/src/number.js","../node_modules/d3-interpolate/src/numberArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/d3-interpolate/src/array.js","../node_modules/d3-interpolate/src/basis.js","../node_modules/d3-interpolate/src/constant.js","../node_modules/d3-interpolate/src/color.js","../node_modules/d3-interpolate/src/rgb.js","../node_modules/d3-interpolate/src/basisClosed.js","../node_modules/d3-interpolate/src/date.js","../node_modules/d3-interpolate/src/object.js","../node_modules/d3-interpolate/src/string.js","../node_modules/d3-interpolate/src/value.js","../node_modules/d3-color/src/define.js","../node_modules/d3-color/src/color.js","../node_modules/gl-matrix/esm/mat2.js","../node_modules/gl-matrix/esm/mat3.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"names":["cachedSetTimeout","cachedClearTimeout","process","module","exports","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","e","call","this","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","marker","runClearTimeout","Item","array","noop","nextTick","args","Array","arguments","i","push","prototype","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","EPSILON","ARRAY_TYPE","Float32Array","RANDOM","Math","random","PI","hypot","y","sqrt","create","out","glMatrix","clone","a","fromValues","x","copy","set","add","b","subtract","multiply","divide","ceil","floor","min","max","round","scale","scaleAndAdd","distance","squaredDistance","squaredLength","negate","inverse","normalize","dot","cross","z","lerp","t","ax","ay","r","cos","sin","transformMat2","m","transformMat2d","transformMat3","transformMat4","rotate","rad","p0","p1","sinC","cosC","angle","x1","y1","x2","y2","mag","cosine","acos","zero","str","exactEquals","equals","a0","a1","b0","b1","abs","sub","mul","div","dist","sqrDist","sqrLen","forEach","vec","stride","offset","count","fn","arg","l","m00","m01","m02","m03","m10","m11","m12","m13","m20","m21","m22","m23","m30","m31","m32","m33","identity","transpose","a01","a02","a03","a12","a13","a23","invert","a00","a10","a11","a20","a21","a22","a30","a31","a32","a33","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","adjoint","determinant","b2","b3","translate","v","axis","s","c","b12","b20","b21","b22","rotateX","rotateY","rotateZ","fromTranslation","fromScaling","fromRotation","fromXRotation","fromYRotation","fromZRotation","fromRotationTranslation","q","w","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz","fromQuat2","translation","bx","by","bz","bw","az","aw","magnitude","getTranslation","mat","getScaling","getRotation","scaling","is1","is2","is3","sm11","sm12","sm13","sm21","sm22","sm23","sm31","sm32","sm33","trace","S","fromRotationTranslationScale","sx","sy","sz","fromRotationTranslationScaleOrigin","o","ox","oy","oz","out0","out1","out2","out4","out5","out6","out8","out9","out10","fromQuat","yx","zx","zy","frustum","left","right","bottom","top","near","far","rl","tb","nf","perspective","fovy","aspect","f","tan","Infinity","perspectiveFromFieldOfView","fov","upTan","upDegrees","downTan","downDegrees","leftTan","leftDegrees","rightTan","rightDegrees","xScale","yScale","ortho","lr","bt","lookAt","eye","center","up","x0","y0","z0","z1","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","targetTo","target","frob","multiplyScalar","multiplyScalarAndAdd","a2","a3","a4","a5","a6","a7","a8","a9","a14","a15","b4","b5","b6","b7","b8","b9","b13","b14","b15","hermite","d","factorTimes2","factor1","factor2","factor3","factor4","bezier","inverseFactor","inverseFactorTimesTwo","zScale","transformQuat","qx","qy","qz","qw","uvx","uvy","uvz","uuvx","uuvy","uuvz","w2","p","u","A","B","C","D","E","F","G","H","I","J","v1","v2","v3","v4","s1","s2","ix","iy","iz","iw","isNumberArray","ArrayBuffer","isView","DataView","n","slice","genericArray","nb","na","value","numberArray","basis","t1","v0","t2","t3","linear","gamma","nogamma","pow","exponential","constant","isNaN","rgbGamma","color","rgb","start","end","colorRgb","g","opacity","rgbSpline","spline","colors","values","Date","setTime","k","reA","reB","RegExp","source","am","bm","bs","bi","lastIndex","exec","index","number","one","join","string","date","isArray","valueOf","toString","object","constructor","factory","extend","parent","definition","Object","key","Color","darker","brighter","reI","reN","reP","reHex","reRgbInteger","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color_formatHex","formatHex","color_formatRgb","formatRgb","format","trim","toLowerCase","parseInt","rgbn","Rgb","rgba","hsla","hasOwnProperty","NaN","rgbConvert","rgb_formatHex","hex","rgb_formatRgb","h","Hsl","hslConvert","hsl2rgb","m1","m2","define","channels","assign","displayable","formatHsl","LDU","L","U","fromMat4","fromMat2d","normalFromMat4","projection","width","height","_slicedToArray","arr","Symbol","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","err","unsupportedIterableToArray","TypeError"],"mappings":"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","file":"static/js/3.11438a07.chunk.js","sourcesContent":["// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\r\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import * as glMatrix from \"./common.js\";\n/**\r\n * 2 Dimensional Vector\r\n * @module vec2\r\n */\n\n/**\r\n * Creates a new, empty vec2\r\n *\r\n * @returns {vec2} a new 2D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(2);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec2 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec2} a vector to clone\r\n * @returns {vec2} a new 2D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\r\n * Creates a new vec2 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} a new 2D vector\r\n */\n\nexport function fromValues(x, y) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\r\n * Copy the values from one vec2 to another\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the source vector\r\n * @returns {vec2} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\r\n * Set the components of a vec2 to the given values\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} out\r\n */\n\nexport function set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\r\n * Adds two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n/**\r\n * Multiplies two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n/**\r\n * Divides two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to ceil\r\n * @returns {vec2} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to floor\r\n * @returns {vec2} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to round\r\n * @returns {vec2} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n/**\r\n * Scales a vec2 by a scalar number\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec2} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n/**\r\n * Adds two vec2's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec2} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec2's\r\n *\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.hypot(x, y);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec2's\r\n *\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n}\n/**\r\n * Calculates the length of a vec2\r\n *\r\n * @param {ReadonlyVec2} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.hypot(x, y);\n}\n/**\r\n * Calculates the squared length of a vec2\r\n *\r\n * @param {ReadonlyVec2} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n}\n/**\r\n * Negates the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to negate\r\n * @returns {vec2} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to invert\r\n * @returns {vec2} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n/**\r\n * Normalize a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to normalize\r\n * @returns {vec2} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec2's\r\n *\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n/**\r\n * Computes the cross product of two vec2's\r\n * Note that the cross product must by definition produce a 3D vector\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec2} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec2} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat2} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat2d\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat2d} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat3\r\n * 3rd vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat3} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat4\r\n * 3rd vector component is implicitly '0'\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n/**\r\n * Rotate a 2D vector\r\n * @param {vec2} out The receiving vec2\r\n * @param {ReadonlyVec2} a The vec2 point to rotate\r\n * @param {ReadonlyVec2} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec2} out\r\n */\n\nexport function rotate(out, a, b, rad) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n      p1 = a[1] - b[1],\n      sinC = Math.sin(rad),\n      cosC = Math.cos(rad); //perform rotation and translate to correct position\n\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n}\n/**\r\n * Get the angle between two 2D vectors\r\n * @param {ReadonlyVec2} a The first operand\r\n * @param {ReadonlyVec2} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\nexport function angle(a, b) {\n  var x1 = a[0],\n      y1 = a[1],\n      x2 = b[0],\n      y2 = b[1],\n      // mag is the product of the magnitudes of a and b\n  mag = Math.sqrt(x1 * x1 + y1 * y1) * Math.sqrt(x2 * x2 + y2 * y2),\n      // mag &&.. short circuits if mag == 0\n  cosine = mag && (x1 * x2 + y1 * y2) / mag; // Math.min(Math.max(cosine, -1), 1) clamps the cosine between -1 and 1\n\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\r\n * Set the components of a vec2 to zero\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @returns {vec2} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec2} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"vec2(\" + a[0] + \", \" + a[1] + \")\";\n}\n/**\r\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec2} a The first vector.\r\n * @param {ReadonlyVec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec2} a The first vector.\r\n * @param {ReadonlyVec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n/**\r\n * Alias for {@link vec2.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec2.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec2.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec2.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec2.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec2.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec2.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec2s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\n\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to translate\r\n * @param {ReadonlyVec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to scale\r\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyVec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {ReadonlyQuat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @param {ReadonlyVec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @param {ReadonlyVec3} s Scaling vector\r\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyQuat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\n\nexport function perspective(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function ortho(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {ReadonlyVec3} eye Position of the viewer\r\n * @param {ReadonlyVec3} center Point the viewer is looking at\r\n * @param {ReadonlyVec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {ReadonlyVec3} eye Position of the viewer\r\n * @param {ReadonlyVec3} center Point the viewer is looking at\r\n * @param {ReadonlyVec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {ReadonlyMat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat4} a The first matrix.\r\n * @param {ReadonlyMat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat4} a The first matrix.\r\n * @param {ReadonlyMat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\r\n * 3 Dimensional Vector\r\n * @module vec3\r\n */\n\n/**\r\n * Creates a new, empty vec3\r\n *\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec3 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec3} a vector to clone\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Calculates the length of a vec3\r\n *\r\n * @param {ReadonlyVec3} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Creates a new vec3 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Copy the values from one vec3 to another\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the source vector\r\n * @returns {vec3} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Set the components of a vec3 to the given values\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} out\r\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Adds two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\r\n * Multiplies two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\r\n * Divides two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to ceil\r\n * @returns {vec3} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to floor\r\n * @returns {vec3} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to round\r\n * @returns {vec3} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\r\n * Scales a vec3 by a scalar number\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec3} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\r\n * Adds two vec3's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec3} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Calculates the squared length of a vec3\r\n *\r\n * @param {ReadonlyVec3} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Negates the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to negate\r\n * @returns {vec3} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to invert\r\n * @returns {vec3} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\r\n * Normalize a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to normalize\r\n * @returns {vec3} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\r\n * Computes the cross product of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\r\n * Performs a hermite interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {ReadonlyVec3} c the third operand\r\n * @param {ReadonlyVec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Performs a bezier interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {ReadonlyVec3} c the third operand\r\n * @param {ReadonlyVec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec3} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat4.\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat3.\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\r\n * Transforms the vec3 with a quat\r\n * Can also be used for dual quaternions. (Multiply it with the real part)\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyQuat} q quaternion to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the x-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the y-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Get the angle between two 3D vectors\r\n * @param {ReadonlyVec3} a The first operand\r\n * @param {ReadonlyVec3} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\nexport function angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\r\n * Set the components of a vec3 to zero\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @returns {vec3} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec3} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec3} a The first vector.\r\n * @param {ReadonlyVec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec3} a The first vector.\r\n * @param {ReadonlyVec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\r\n * Alias for {@link vec3.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec3.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec3.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec3.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec3.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec3.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec3.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec3s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\n/**\r\n * 4 Dimensional Vector\r\n * @module vec4\r\n */\n\n/**\r\n * Creates a new, empty vec4\r\n *\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec4} a vector to clone\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Copy the values from one vec4 to another\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the source vector\r\n * @returns {vec4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to the given values\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} out\r\n */\n\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Adds two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\r\n * Multiplies two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\r\n * Divides two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to ceil\r\n * @returns {vec4} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to floor\r\n * @returns {vec4} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to round\r\n * @returns {vec4} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\r\n * Scales a vec4 by a scalar number\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec4} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\r\n * Adds two vec4's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec4} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Calculates the length of a vec4\r\n *\r\n * @param {ReadonlyVec4} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\r\n * Calculates the squared length of a vec4\r\n *\r\n * @param {ReadonlyVec4} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Negates the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to negate\r\n * @returns {vec4} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to invert\r\n * @returns {vec4} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\r\n * Normalize a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to normalize\r\n * @returns {vec4} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\r\n * Returns the cross-product of three vectors in a 4-dimensional space\r\n *\r\n * @param {ReadonlyVec4} result the receiving vector\r\n * @param {ReadonlyVec4} U the first vector\r\n * @param {ReadonlyVec4} V the second vector\r\n * @param {ReadonlyVec4} W the third vector\r\n * @returns {vec4} result\r\n */\n\nexport function cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec4} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec4} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a mat4.\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec4} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a quat\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to transform\r\n * @param {ReadonlyQuat} q quaternion to transform with\r\n * @returns {vec4} out\r\n */\n\nexport function transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to zero\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @returns {vec4} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec4} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"vec4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec4} a The first vector.\r\n * @param {ReadonlyVec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec4} a The first vector.\r\n * @param {ReadonlyVec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\r\n * Alias for {@link vec4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec4.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec4.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec4.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec4.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec4.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec4s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();","export default function(a, b) {\n  return a = +a, b = +b, function(t) {\n    return a * (1 - t) + b * t;\n  };\n}\n","export default function(a, b) {\n  if (!b) b = [];\n  var n = a ? Math.min(b.length, a.length) : 0,\n      c = b.slice(),\n      i;\n  return function(t) {\n    for (i = 0; i < n; ++i) c[i] = a[i] * (1 - t) + b[i] * t;\n    return c;\n  };\n}\n\nexport function isNumberArray(x) {\n  return ArrayBuffer.isView(x) && !(x instanceof DataView);\n}\n","module.exports = require(\"regenerator-runtime\");\n","import value from \"./value.js\";\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\n\nexport default function(a, b) {\n  return (isNumberArray(b) ? numberArray : genericArray)(a, b);\n}\n\nexport function genericArray(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import constant from \"./constant.js\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis.js\";\nimport basisClosed from \"./basisClosed.js\";\nimport nogamma, {gamma} from \"./color.js\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","import {basis} from \"./basis.js\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b = +b, function(t) {\n    return d.setTime(a * (1 - t) + b * t), d;\n  };\n}\n","import value from \"./value.js\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import number from \"./number.js\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb.js\";\nimport {genericArray} from \"./array.js\";\nimport date from \"./date.js\";\nimport number from \"./number.js\";\nimport object from \"./object.js\";\nimport string from \"./string.js\";\nimport constant from \"./constant.js\";\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : isNumberArray(b) ? numberArray\n      : Array.isArray(b) ? genericArray\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define.js\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex = /^#([0-9a-f]{3,8})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  copy: function(channels) {\n    return Object.assign(new this.constructor, this, channels);\n  },\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: color_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: color_formatHex,\n  formatHsl: color_formatHsl,\n  formatRgb: color_formatRgb,\n  toString: color_formatRgb\n});\n\nfunction color_formatHex() {\n  return this.rgb().formatHex();\n}\n\nfunction color_formatHsl() {\n  return hslConvert(this).formatHsl();\n}\n\nfunction color_formatRgb() {\n  return this.rgb().formatRgb();\n}\n\nexport default function color(format) {\n  var m, l;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000\n      : l === 3 ? new Rgb((m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1) // #f00\n      : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000\n      : l === 4 ? rgba((m >> 12 & 0xf) | (m >> 8 & 0xf0), (m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), (((m & 0xf) << 4) | (m & 0xf)) / 0xff) // #f000\n      : null) // invalid hex\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (-0.5 <= this.r && this.r < 255.5)\n        && (-0.5 <= this.g && this.g < 255.5)\n        && (-0.5 <= this.b && this.b < 255.5)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: rgb_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: rgb_formatHex,\n  formatRgb: rgb_formatRgb,\n  toString: rgb_formatRgb\n}));\n\nfunction rgb_formatHex() {\n  return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n}\n\nfunction rgb_formatRgb() {\n  var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n  return (a === 1 ? \"rgb(\" : \"rgba(\")\n      + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n      + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n      + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n      + (a === 1 ? \")\" : \", \" + a + \")\");\n}\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  formatHsl: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"hsl(\" : \"hsla(\")\n        + (this.h || 0) + \", \"\n        + (this.s || 0) * 100 + \"%, \"\n        + (this.l || 0) * 100 + \"%\"\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","import * as glMatrix from \"./common.js\";\n/**\r\n * 2x2 Matrix\r\n * @module mat2\r\n */\n\n/**\r\n * Creates a new identity mat2\r\n *\r\n * @returns {mat2} a new 2x2 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[0] = 1;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat2 initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat2} a matrix to clone\r\n * @returns {mat2} a new 2x2 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Copy the values from one mat2 to another\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set a mat2 to the identity matrix\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @returns {mat2} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Create a new mat2 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\r\n * @returns {mat2} out A new 2x2 matrix\r\n */\n\nexport function fromValues(m00, m01, m10, m11) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n/**\r\n * Set the components of a mat2 to the given values\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\r\n * @returns {mat2} out\r\n */\n\nexport function set(out, m00, m01, m10, m11) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n/**\r\n * Transpose the values of a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache\n  // some values\n  if (out === a) {\n    var a1 = a[1];\n    out[1] = a[2];\n    out[2] = a1;\n  } else {\n    out[0] = a[0];\n    out[1] = a[2];\n    out[2] = a[1];\n    out[3] = a[3];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\nexport function invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3]; // Calculate the determinant\n\n  var det = a0 * a3 - a2 * a1;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = a3 * det;\n  out[1] = -a1 * det;\n  out[2] = -a2 * det;\n  out[3] = a0 * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\nexport function adjoint(out, a) {\n  // Caching this value is nessecary if out == a\n  var a0 = a[0];\n  out[0] = a[3];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a0;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat2\r\n *\r\n * @param {ReadonlyMat2} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  return a[0] * a[3] - a[2] * a[1];\n}\n/**\r\n * Multiplies two mat2's\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the first operand\r\n * @param {ReadonlyMat2} b the second operand\r\n * @returns {mat2} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  return out;\n}\n/**\r\n * Rotates a mat2 by the given angle\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2} out\r\n */\n\nexport function rotate(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  return out;\n}\n/**\r\n * Scales the mat2 by the dimensions in the given vec2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the matrix to rotate\r\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\r\n * @returns {mat2} out\r\n **/\n\nexport function scale(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2.identity(dest);\r\n *     mat2.rotate(dest, dest, rad);\r\n *\r\n * @param {mat2} out mat2 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2} out\r\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2.identity(dest);\r\n *     mat2.scale(dest, dest, vec);\r\n *\r\n * @param {mat2} out mat2 receiving operation result\r\n * @param {ReadonlyVec2} v Scaling vector\r\n * @returns {mat2} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  return out;\n}\n/**\r\n * Returns a string representation of a mat2\r\n *\r\n * @param {ReadonlyMat2} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return \"mat2(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat2\r\n *\r\n * @param {ReadonlyMat2} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3]);\n}\n/**\r\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\r\n * @param {ReadonlyMat2} L the lower triangular matrix\r\n * @param {ReadonlyMat2} D the diagonal matrix\r\n * @param {ReadonlyMat2} U the upper triangular matrix\r\n * @param {ReadonlyMat2} a the input matrix to factorize\r\n */\n\nexport function LDU(L, D, U, a) {\n  L[2] = a[2] / a[0];\n  U[0] = a[0];\n  U[1] = a[1];\n  U[3] = a[3] - L[2] * U[1];\n  return [L, D, U];\n}\n/**\r\n * Adds two mat2's\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the first operand\r\n * @param {ReadonlyMat2} b the second operand\r\n * @returns {mat2} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the first operand\r\n * @param {ReadonlyMat2} b the second operand\r\n * @returns {mat2} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat2} a The first matrix.\r\n * @param {ReadonlyMat2} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat2} a The first matrix.\r\n * @param {ReadonlyMat2} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat2} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\r\n * Adds two mat2's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat2} out the receiving vector\r\n * @param {ReadonlyMat2} a the first operand\r\n * @param {ReadonlyMat2} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat2} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\r\n * Alias for {@link mat2.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat2.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\r\n * 3x3 Matrix\r\n * @module mat3\r\n */\n\n/**\r\n * Creates a new identity mat3\r\n *\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(9);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the upper-left 3x3 values into the given mat3.\r\n *\r\n * @param {mat3} out the receiving 3x3 matrix\r\n * @param {ReadonlyMat4} a   the source 4x4 matrix\r\n * @returns {mat3} out\r\n */\n\nexport function fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n/**\r\n * Creates a new mat3 initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat3} a matrix to clone\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Copy the values from one mat3 to another\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Create a new mat3 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} A new mat3\r\n */\n\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set the components of a mat3 to the given values\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} out\r\n */\n\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set a mat3 to the identity matrix\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @returns {mat3} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat3\r\n *\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n/**\r\n * Multiplies two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n/**\r\n * Translate a mat3 by the given vector\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to translate\r\n * @param {ReadonlyVec2} v vector to translate by\r\n * @returns {mat3} out\r\n */\n\nexport function translate(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n/**\r\n * Rotates a mat3 by the given angle\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\nexport function rotate(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n/**\r\n * Scales the mat3 by the dimensions in the given vec2\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to rotate\r\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\r\n * @returns {mat3} out\r\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.translate(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyVec2} v Translation vector\r\n * @returns {mat3} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.rotate(dest, dest, rad);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.scale(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyVec2} v Scaling vector\r\n * @returns {mat3} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the values from a mat2d into a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the matrix to copy\r\n * @returns {mat3} out\r\n **/\n\nexport function fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Calculates a 3x3 matrix from the given quaternion\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyQuat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat3} out\r\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n/**\r\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyMat4} a Mat4 to derive the normal matrix from\r\n *\r\n * @returns {mat3} out\r\n */\n\nexport function normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n/**\r\n * Generates a 2D projection matrix with the given bounds\r\n *\r\n * @param {mat3} out mat3 frustum matrix will be written into\r\n * @param {number} width Width of your gl context\r\n * @param {number} height Height of gl context\r\n * @returns {mat3} out\r\n */\n\nexport function projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat3\r\n *\r\n * @param {ReadonlyMat3} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return \"mat3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat3\r\n *\r\n * @param {ReadonlyMat3} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\n}\n/**\r\n * Adds two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat3} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n/**\r\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat3} out the receiving vector\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat3} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat3} a The first matrix.\r\n * @param {ReadonlyMat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat3} a The first matrix.\r\n * @param {ReadonlyMat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n/**\r\n * Alias for {@link mat3.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat3.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}