{"version":3,"sources":["router/menuList.ts","components/menu/index.tsx","asserts/header.png","components/headerSearch/index.tsx","components/header/index.tsx","layout/menuLayout/leftMenuLayout/index.tsx","layout/menuLayout/topMenuLayout/index.tsx","layout/menuLayout/index.tsx","asserts/logo.svg","components/footer/index.tsx"],"names":["menuList","name","path","icon","DashboardOutlined","UserOutlined","WarningOutlined","children","FormOutlined","SubMenu","AMenu","Item","handleMenu","key","map","item","index","title","Menu","props","layoutMode","theme","fixHeader","menuTheme","language","mode","menuClassName","className","HeaderSearch","defaultValue","placeholder","onVisibleChange","restProps","open","defaultOpen","inputRef","useRef","useState","value","setValue","inputClassName","setInputClassName","onClick","current","console","log","focus","onTransitionEnd","propertyName","SearchOutlined","options","onChange","ref","aria-label","onKeyDown","e","onBlur","AvatarMenu","MsgMenu","LangMenu","Header","isMenuOpen","setIsMenuOpen","isMobile","handleCollapsed","OpenIcon","openMenu","MenuFoldOutlined","MenuUnfoldOutlined","wrap","align","justify","flex","src","logo","QuestionCircleOutlined","overlay","placement","BellOutlined","avatar","TranslationOutlined","Layout","Footer","Sider","Content","LeftMenuLayout","display","titleStyle","setTitleStyle","isCollapsed","setCollapsed","setMobileStatus","changeTitleStatus","XSider","onCollapse","breakpoint","collapsible","collapsed","onBreakpoint","trigger","alt","style","DrawerSider","headerStyle","closable","onClose","visible","width","bodyStyle","padding","TopMenuLayout","showFooter","MenuLayout","localConfig","localStorage","getItem","configObj","config","JSON","parse"],"mappings":"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","file":"static/js/6.33631cd5.chunk.js","sourcesContent":["import { DashboardOutlined, WarningOutlined, FormOutlined, UserOutlined } from '@ant-design/icons';\nexport interface IMenu {\n  name: string;\n  children?: IMenu[];\n  icon?: any;\n  path?: string;\n}\nconst menuList: IMenu[] = [\n  {\n    name: 'Dashboard',\n    path: '/dashboard',\n    icon: DashboardOutlined\n  },\n  {\n    name: '布局',\n    path: '/menuLayout',\n    icon: UserOutlined\n  },\n  {\n    name: '异常',\n    icon: WarningOutlined,\n    children: [\n      {\n        name: '403',\n        path: '/error/403'\n      },\n      {\n        name: '404',\n        path: '/error/404'\n      }\n    ]\n  },\n  {\n    name: '三级表',\n    icon: FormOutlined,\n    children: [\n      {\n        name: '403',\n        path: '/error/403',\n        children: [\n          {\n            name: '403',\n            path: '/error/403'\n          },\n          {\n            name: '404',\n            path: '/error/404'\n          }\n        ]\n      },\n      {\n        name: '404',\n        path: '/error/404'\n      }\n    ]\n  }\n];\nexport default menuList;\n","import React, { FC, Component } from 'react';\nimport './index.scss';\nimport { Menu as AMenu } from 'antd';\nimport { MenuMode } from 'antd/lib/menu';\nimport { MenuTheme } from 'antd/lib/menu/MenuContext';\nimport { ELayoutMode, ETheme, Elanguage } from '../../util/config';\nimport menuList, { IMenu } from '../../router/menuList';\ninterface IProps {\n  layoutMode: ELayoutMode;\n  fixHeader: Boolean;\n  theme: ETheme;\n  language: Elanguage;\n}\nconst { Item, SubMenu } = AMenu;\nconst Menu: FC<IProps> = (props) => {\n  const { layoutMode, fixHeader, theme, language } = props;\n  let menuTheme: MenuTheme = 'dark';\n  if (theme !== 'dark') {\n    menuTheme = 'light';\n  }\n  let mode: MenuMode = layoutMode === 'top' ? 'horizontal' : 'inline';\n  let menuClassName = 'menu__container-' + mode;\n  return (\n    <AMenu className={menuClassName} mode={mode} theme={menuTheme}>\n      {handleMenu(menuList, 0)}\n    </AMenu>\n  );\n};\nfunction handleMenu(menuList: IMenu[], key: number = 0): any[] {\n  return menuList.map((item, index) => {\n    if ('children' in item) {\n      return (\n        <SubMenu\n          key={key + '-' + item.name}\n          icon={item.icon ? <item.icon /> : null}\n          title={item.name}\n        >\n          {handleMenu(item.children!, key + 1)}\n        </SubMenu>\n      );\n    } else {\n      return (\n        <AMenu.Item\n          key={key + '-' + item.name + 'index'}\n          icon={item.icon ? <item.icon /> : null}\n          title={item.name}\n        >\n          {item.name}\n        </AMenu.Item>\n      );\n    }\n  });\n}\nexport default Menu;\n","export default __webpack_public_path__ + \"static/media/header.c8414c56.png\";","import { SearchOutlined } from '@ant-design/icons';\nimport { AutoComplete, Input } from 'antd';\nimport { AutoCompleteProps } from 'antd/es/auto-complete';\nimport React, { useRef, useState } from 'react';\nimport './index.scss';\n\nexport interface HeaderSearchProps {\n  onSearch?: (value?: string) => void;\n  onChange?: (value?: string) => void;\n  onVisibleChange?: (b: boolean) => void;\n  className?: string;\n  placeholder?: string;\n  options?: AutoCompleteProps['options'];\n  defaultOpen?: boolean;\n  open?: boolean;\n  defaultValue?: string;\n  value?: string;\n}\n\nconst HeaderSearch: React.FC<HeaderSearchProps> = (props) => {\n  const {\n    className,\n    defaultValue,\n    onVisibleChange,\n    placeholder,\n    open,\n    defaultOpen,\n    ...restProps\n  } = props;\n  let inputRef = useRef<Input | null>(null);\n  let [value, setValue] = useState('');\n  let [inputClassName, setInputClassName] = useState('input input-hidden');\n  return (\n    <div\n      className=\"headerSerach\"\n      onClick={() => {\n        setInputClassName('input');\n        if (inputRef.current) {\n          console.log(inputRef.current, 11);\n          inputRef.current.focus();\n        }\n      }}\n      onTransitionEnd={({ propertyName }) => {\n        if (propertyName === 'width') {\n          if (onVisibleChange) {\n            //onVisibleChange();\n          }\n        }\n      }}\n    >\n      <SearchOutlined className=\"searchIcon\" />\n      <AutoComplete\n        className={inputClassName}\n        key=\"AutoComplete\"\n        value={value}\n        options={restProps.options}\n        onChange={setValue}\n      >\n        <Input\n          ref={inputRef}\n          defaultValue={defaultValue}\n          aria-label={placeholder}\n          placeholder={placeholder}\n          onKeyDown={(e) => {\n            if (e.key === 'Enter') {\n              console.log(value);\n              //   if (restProps.onSearch) {\n              //     restProps.onSearch(value);\n              //   }\n            }\n          }}\n          onBlur={() => {\n            setInputClassName('input input-hidden');\n          }}\n        />\n      </AutoComplete>\n    </div>\n  );\n};\n\nexport default HeaderSearch;\n","import React, { useState, Dispatch, SetStateAction } from 'react';\nimport './index.scss';\nimport { Row, Col, Dropdown, Menu } from 'antd';\nimport {\n  TranslationOutlined,\n  BellOutlined,\n  QuestionCircleOutlined,\n  MenuFoldOutlined,\n  MenuUnfoldOutlined\n} from '@ant-design/icons';\nimport avatar from '../../asserts/header.png';\nimport HeaderSearch from '../headerSearch';\nimport logo from '../../asserts/logo.svg';\ninterface IProps {\n  isMenuOpen: boolean;\n  setIsMenuOpen: Dispatch<SetStateAction<boolean>>;\n  isMobile: boolean;\n  handleCollapsed: () => void;\n}\nconst Header = (props: IProps) => {\n  const { isMenuOpen, setIsMenuOpen, isMobile, handleCollapsed } = props;\n  let OpenIcon = null;\n  const openMenu = () => {\n    if (isMobile) {\n      setIsMenuOpen(!isMenuOpen);\n    } else {\n      handleCollapsed();\n    }\n  };\n  if (isMenuOpen) {\n    OpenIcon = <MenuFoldOutlined className=\"menuFold\" onClick={openMenu} />;\n  } else {\n    OpenIcon = <MenuUnfoldOutlined className=\"menuFold\" onClick={openMenu} />;\n  }\n  return (\n    <>\n      <Row wrap={false} className=\"global__container\" align=\"middle\" justify=\"space-between\">\n        <Col flex=\"1 1 0%\">\n          <img className=\"logo\" src={logo} />\n          {OpenIcon}\n        </Col>\n        <Col>\n          <HeaderSearch />\n        </Col>\n        <Col className=\"icon\">\n          <QuestionCircleOutlined />\n        </Col>\n        <Dropdown overlay={MsgMenu} placement=\"bottomLeft\">\n          <Col className=\"icon\">\n            <BellOutlined />\n          </Col>\n        </Dropdown>\n        <Dropdown overlay={AvatarMenu} placement=\"bottomCenter\">\n          <Col className=\"userProfile\">\n            <img className=\"avatar\" src={avatar} />\n            <span className=\"name\">flynn-eye</span>\n          </Col>\n        </Dropdown>\n        <Dropdown overlay={LangMenu} placement=\"bottomLeft\">\n          <Col className=\"icon\">\n            <TranslationOutlined />\n          </Col>\n        </Dropdown>\n      </Row>\n    </>\n  );\n};\nconst AvatarMenu = () => {\n  return (\n    <Menu>\n      <Menu.Item>\n        <a>退出登录</a>\n      </Menu.Item>\n      <Menu.Item>\n        <a>个人资料</a>\n      </Menu.Item>\n    </Menu>\n  );\n};\nconst MsgMenu = () => {\n  return (\n    <Menu>\n      <Menu.Item>\n        <a>English</a>\n      </Menu.Item>\n      <Menu.Item>\n        <a>中文</a>\n      </Menu.Item>\n    </Menu>\n  );\n};\nconst LangMenu = () => {\n  return (\n    <Menu>\n      <Menu.Item>\n        <a>English</a>\n      </Menu.Item>\n      <Menu.Item>\n        <a>中文</a>\n      </Menu.Item>\n    </Menu>\n  );\n};\nexport default Header;\n","import React, { FC, useState } from 'react';\nimport './index.scss';\nimport { Layout, Row, Drawer } from 'antd';\nimport { IConfig } from '../../../util/config';\nimport FooterContent from '../../../components/footer';\nimport Menu from '../../../components/menu';\nimport logo from '../../../asserts/logo.svg';\nimport GlobalHeader from '../../../components/header';\nconst { Header, Footer, Sider, Content } = Layout;\ninterface ITitleStyle {\n  display: string;\n}\nconst LeftMenuLayout: FC<IConfig> = (props) => {\n  const { layoutMode, fixHeader, theme, language } = props;\n  const [isMenuOpen, setIsMenuOpen] = useState<boolean>(false);\n  const [titleStyle, setTitleStyle] = useState({\n    display: 'inline-block'\n  });\n  const [isCollapsed, setCollapsed] = useState<boolean>(false);\n  const [isMobile, setMobileStatus] = useState<boolean>(true);\n  let changeTitleStatus = () => {\n    if (titleStyle.display === 'none') {\n      setTitleStyle({\n        display: 'inline-block'\n      });\n    } else {\n      setTitleStyle({\n        display: 'none'\n      });\n    }\n  };\n  const handleCollapse: () => void = () => {\n    changeTitleStatus();\n    setCollapsed(!isCollapsed);\n  };\n  const XSider = (\n    <Sider\n      onCollapse={() => changeTitleStatus()}\n      breakpoint=\"md\"\n      collapsible={true}\n      collapsed={isCollapsed}\n      className=\"siderShow sider\"\n      onBreakpoint={() => {\n        setMobileStatus(!isMobile);\n      }}\n      trigger={null}\n    >\n      <Row justify=\"center\" align=\"middle\" className=\"sider__logo\">\n        <a>\n          <img src={logo} alt=\"\" />\n          <h1 style={titleStyle}>ant design pro</h1>\n        </a>\n      </Row>\n      <Menu language={language} theme={theme} layoutMode={layoutMode} fixHeader={fixHeader} />\n    </Sider>\n  );\n  const DrawerSider = (\n    <div className=\"LeftMenuLayout__container\">\n      <Sider\n        trigger={null}\n        onCollapse={() => changeTitleStatus()}\n        collapsible={true}\n        className=\"sider\"\n      >\n        <Row justify=\"center\" align=\"middle\" className=\"sider__logo\">\n          <a>\n            <img src={logo} alt=\"\" />\n            <h1>ant design pro</h1>\n          </a>\n        </Row>\n        <Menu language={language} theme={theme} layoutMode={layoutMode} fixHeader={fixHeader} />\n      </Sider>\n    </div>\n  );\n  return (\n    <>\n      <Layout className=\"LeftMenuLayout__container\">\n        {XSider}\n        <Layout>\n          <Header className=\"header\">\n            <GlobalHeader\n              handleCollapsed={handleCollapse}\n              isMenuOpen={isMenuOpen}\n              setIsMenuOpen={setIsMenuOpen}\n              isMobile={isMobile}\n            />\n          </Header>\n          <Content>Content</Content>\n          <Footer>\n            <FooterContent />\n          </Footer>\n        </Layout>\n      </Layout>\n      <Drawer\n        headerStyle={{ display: 'none' }}\n        placement=\"left\"\n        closable={false}\n        onClose={() => {\n          setIsMenuOpen(false);\n        }}\n        visible={isMenuOpen}\n        width=\"200\"\n        bodyStyle={{ padding: 0 }}\n      >\n        {DrawerSider}\n      </Drawer>\n    </>\n  );\n};\nexport default LeftMenuLayout;\n","import React, { FC } from 'react';\nimport './index.scss';\nimport { Layout } from 'antd';\nimport { IConfig } from '../../../util/config';\nimport FooterContent from '../../../components/footer';\nimport Menu from '../../../components/menu';\nconst { Header, Footer, Sider, Content } = Layout;\nconst TopMenuLayout: FC<IConfig> = (props) => {\n  const { layoutMode, fixHeader, theme, language, showFooter, children } = props;\n  return (\n    <Layout className=\"toplayout__container\">\n      <Header>\n        <Menu language={language} theme={theme} layoutMode={layoutMode} fixHeader={fixHeader} />\n      </Header>\n      <Content>Content</Content>\n      <Footer>\n        <FooterContent />\n      </Footer>\n    </Layout>\n  );\n};\nexport default TopMenuLayout;\n","import React from 'react';\nimport './index.scss';\nimport LeftMenuLayout from './leftMenuLayout';\nimport TopMenuLayout from './topMenuLayout';\nimport { IConfig, config } from '../../util/config';\nconst MenuLayout = () => {\n  const localConfig = localStorage.getItem('config');\n  let configObj: IConfig = config;\n  if (localConfig) {\n    configObj = JSON.parse(localConfig!);\n  }\n  let { layoutMode } = configObj;\n  if (layoutMode === 'top') {\n    return <TopMenuLayout {...configObj} />;\n  } else {\n    return <LeftMenuLayout {...configObj} />;\n  }\n};\nexport default MenuLayout;\n","export default __webpack_public_path__ + \"static/media/logo.f0355d39.svg\";","import React from 'react';\nimport { Row, Col } from 'antd';\nimport './index.scss';\nimport { GithubOutlined, CopyrightOutlined } from '@ant-design/icons';\n\nconst Footer = () => {\n  return (\n    <div className=\"footer__container\">\n      <Row justify=\"center\">\n        <a className=\"link-hover\">Ant Design Pro</a>\n        <GithubOutlined className=\"footer__githubLogo\" />\n        <a className=\"link-hover\">Ant Design</a>\n      </Row>\n      <Row justify=\"center\">\n        <span>Copyright</span>\n        <CopyrightOutlined className=\"footer__copyright\" />\n        <span>2019 蚂蚁金服体验技术部出品</span>\n      </Row>\n    </div>\n  );\n};\nexport default Footer;\n"],"sourceRoot":""}