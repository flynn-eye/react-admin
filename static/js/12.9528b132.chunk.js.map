{"version":3,"sources":["asserts/logo.svg","components/footer/index.tsx","router/menuList.ts","components/menu/index.tsx","asserts/header.png","components/headerSearch/index.tsx","components/header/index.tsx","layout/menuLayout/leftMenuLayout/index.tsx","layout/menuLayout/topMenuLayout/index.tsx","layout/menuLayout/index.tsx"],"names":["Footer","className","justify","menuList","name","path","icon","DashboardOutlined","UserOutlined","WarningOutlined","children","FormOutlined","SubMenu","AMenu","Item","Menu","props","history","useHistory","layoutMode","theme","fixHeader","handleClick","language","item","push","menuTheme","mode","menuClassName","handleMenu","key","map","index","title","onClick","HeaderSearch","defaultValue","placeholder","onVisibleChange","restProps","open","defaultOpen","inputRef","useRef","useState","value","setValue","inputClassName","setInputClassName","current","console","log","input","onTransitionEnd","propertyName","SearchOutlined","options","onChange","ref","aria-label","onKeyDown","e","onBlur","AvatarMenu","MsgMenu","LangMenu","Header","isMenuOpen","setIsMenuOpen","isMobile","handleCollapsed","OpenIcon","openMenu","MenuFoldOutlined","MenuUnfoldOutlined","wrap","align","flex","src","logo","QuestionCircleOutlined","overlay","placement","BellOutlined","avatar","TranslationOutlined","Layout","Sider","Content","LeftMenuLayout","display","titleStyle","setTitleStyle","useEffect","window","addEventListener","document","body","clientWidth","setMobileStatus","removeEventListener","isCollapsed","setCollapsed","handleCollapse","XSider","breakpoint","collapsible","collapsed","onBreakpoint","trigger","alt","style","DrawerSider","headerStyle","closable","onClose","visible","width","bodyStyle","padding","TopMenuLayout","showFooter","MenuLayout","localConfig","localStorage","getItem","configObj","config","JSON","parse"],"mappings":"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","file":"static/js/12.9528b132.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.f0355d39.svg\";","import React from 'react';\nimport { Row, Col } from 'antd';\nimport './index.scss';\nimport { GithubOutlined, CopyrightOutlined } from '@ant-design/icons';\n\nconst Footer = () => {\n  return (\n    <div className=\"footer__container\">\n      <Row justify=\"center\">\n        <a className=\"link-hover\">Ant Design Pro</a>\n        <GithubOutlined className=\"footer__githubLogo\" />\n        <a className=\"link-hover\">Ant Design</a>\n      </Row>\n      <Row justify=\"center\">\n        <span>Copyright</span>\n        <CopyrightOutlined className=\"footer__copyright\" />\n        <span>2019 蚂蚁金服体验技术部出品</span>\n      </Row>\n    </div>\n  );\n};\nexport default Footer;\n","import { DashboardOutlined, WarningOutlined, FormOutlined, UserOutlined } from '@ant-design/icons';\nexport interface IMenu {\n  name: string;\n  children?: IMenu[];\n  icon?: any;\n  path?: string;\n}\nconst menuList: IMenu[] = [\n  {\n    name: 'Dashboard',\n    path: '/dashboard',\n    icon: DashboardOutlined\n  },\n  {\n    name: '地图',\n    path: '/worldMap',\n    icon: UserOutlined\n  },\n  {\n    name: '异常',\n    icon: WarningOutlined,\n    children: [\n      {\n        name: '403',\n        path: '/error/403'\n      },\n      {\n        name: '404',\n        path: '/error/404'\n      }\n    ]\n  },\n  {\n    name: '三级表',\n    icon: FormOutlined,\n    children: [\n      {\n        name: '403',\n        path: '/error/403',\n        children: [\n          {\n            name: '403',\n            path: '/error/403'\n          },\n          {\n            name: '404',\n            path: '/error/404'\n          }\n        ]\n      },\n      {\n        name: '404',\n        path: '/error/404'\n      }\n    ]\n  }\n];\nexport default menuList;\n","import React, { FC, Component } from 'react';\nimport './index.scss';\nimport { Menu as AMenu } from 'antd';\nimport { MenuMode } from 'antd/lib/menu';\nimport { MenuTheme } from 'antd/lib/menu/MenuContext';\nimport { ELayoutMode, ETheme, Elanguage } from '../../util/config';\nimport menuList, { IMenu } from '../../router/menuList';\nimport { useHistory } from 'react-router-dom';\ninterface IProps {\n  layoutMode: ELayoutMode;\n  fixHeader: Boolean;\n  theme: ETheme;\n  language: Elanguage;\n}\nconst { Item, SubMenu } = AMenu;\nconst Menu: FC<IProps> = (props) => {\n  const history = useHistory();\n  const { layoutMode, fixHeader, theme, language } = props;\n  const handleClick = (item: IMenu) => {\n    history.push(item.path!);\n  };\n  const handleMenu = (menuList: IMenu[], key: number = 0): any[] => {\n    return menuList.map((item, index) => {\n      if ('children' in item) {\n        return (\n          <SubMenu\n            key={key + '-' + item.name}\n            icon={item.icon ? <item.icon /> : null}\n            title={item.name}\n          >\n            {handleMenu(item.children!, key + 1)}\n          </SubMenu>\n        );\n      } else {\n        return (\n          <AMenu.Item\n            key={key + '-' + item.name + 'index'}\n            icon={item.icon ? <item.icon /> : null}\n            title={item.name}\n            onClick={() => {\n              handleClick(item);\n            }}\n          >\n            {item.name}\n          </AMenu.Item>\n        );\n      }\n    });\n  };\n  let menuTheme: MenuTheme = 'dark';\n  if (theme !== 'dark') {\n    menuTheme = 'light';\n  }\n  let mode: MenuMode = layoutMode === 'top' ? 'horizontal' : 'inline';\n  let menuClassName = 'menu__container-' + mode;\n  return (\n    <AMenu className={menuClassName} mode={mode} theme={menuTheme}>\n      {handleMenu(menuList, 0)}\n    </AMenu>\n  );\n};\nexport default Menu;\n","export default __webpack_public_path__ + \"static/media/header.c8414c56.png\";","import { SearchOutlined } from '@ant-design/icons';\nimport { AutoComplete, Input } from 'antd';\nimport { AutoCompleteProps } from 'antd/es/auto-complete';\nimport React, { useRef, useState } from 'react';\nimport './index.scss';\n\nexport interface HeaderSearchProps {\n  onSearch?: (value?: string) => void;\n  onChange?: (value?: string) => void;\n  onVisibleChange?: (b: boolean) => void;\n  className?: string;\n  placeholder?: string;\n  options?: AutoCompleteProps['options'];\n  defaultOpen?: boolean;\n  open?: boolean;\n  defaultValue?: string;\n  value?: string;\n}\n\nconst HeaderSearch: React.FC<HeaderSearchProps> = (props) => {\n  const {\n    className,\n    defaultValue,\n    onVisibleChange,\n    placeholder,\n    open,\n    defaultOpen,\n    ...restProps\n  } = props;\n  let inputRef = useRef<Input | null>(null);\n  let [value, setValue] = useState('');\n  let [inputClassName, setInputClassName] = useState('input input-hidden');\n  return (\n    <div\n      className=\"headerSerach\"\n      onClick={() => {\n        setInputClassName('input');\n        if (inputRef.current) {\n          console.log(inputRef.current.input);\n        }\n      }}\n      onTransitionEnd={({ propertyName }) => {\n        if (propertyName === 'width') {\n          if (onVisibleChange) {\n            //onVisibleChange();\n          }\n        }\n      }}\n    >\n      <SearchOutlined className=\"searchIcon\" />\n      <AutoComplete\n        className={inputClassName}\n        key=\"AutoComplete\"\n        value={value}\n        options={restProps.options}\n        onChange={setValue}\n      >\n        <Input\n          ref={inputRef}\n          defaultValue={defaultValue}\n          aria-label={placeholder}\n          placeholder={placeholder}\n          onKeyDown={(e) => {\n            if (e.key === 'Enter') {\n              console.log(value);\n            }\n          }}\n          onBlur={() => {\n            setInputClassName('input input-hidden');\n          }}\n        />\n      </AutoComplete>\n    </div>\n  );\n};\n\nexport default HeaderSearch;\n","import React, { useState, Dispatch, SetStateAction } from 'react';\nimport './index.scss';\nimport { Row, Col, Dropdown, Menu } from 'antd';\nimport {\n  TranslationOutlined,\n  BellOutlined,\n  QuestionCircleOutlined,\n  MenuFoldOutlined,\n  MenuUnfoldOutlined\n} from '@ant-design/icons';\nimport avatar from '../../asserts/header.png';\nimport HeaderSearch from '../headerSearch';\nimport logo from '../../asserts/logo.svg';\ninterface IProps {\n  isMenuOpen: boolean;\n  setIsMenuOpen: Dispatch<SetStateAction<boolean>>;\n  isMobile: boolean;\n  handleCollapsed: () => void;\n}\nconst Header = (props: IProps) => {\n  const { isMenuOpen, setIsMenuOpen, isMobile, handleCollapsed } = props;\n  let OpenIcon = null;\n  const openMenu = () => {\n    if (isMobile) {\n      setIsMenuOpen(!isMenuOpen);\n    } else {\n      handleCollapsed();\n    }\n  };\n  if (isMenuOpen) {\n    OpenIcon = <MenuFoldOutlined className=\"menuFold\" onClick={openMenu} />;\n  } else {\n    OpenIcon = <MenuUnfoldOutlined className=\"menuFold\" onClick={openMenu} />;\n  }\n  return (\n    <>\n      <Row wrap={false} className=\"global__container\" align=\"middle\" justify=\"space-between\">\n        <Col flex=\"1 1 0%\">\n          <img className=\"logo\" src={logo} />\n          {OpenIcon}\n        </Col>\n        <Col>\n          <HeaderSearch />\n        </Col>\n        <Col className=\"icon\">\n          <QuestionCircleOutlined />\n        </Col>\n        <Dropdown overlay={MsgMenu} placement=\"bottomLeft\">\n          <Col className=\"icon\">\n            <BellOutlined />\n          </Col>\n        </Dropdown>\n        <Dropdown overlay={AvatarMenu} placement=\"bottomCenter\">\n          <Col className=\"userProfile\">\n            <img className=\"avatar\" src={avatar} />\n            <span className=\"name\">flynn-eye</span>\n          </Col>\n        </Dropdown>\n        <Dropdown overlay={LangMenu} placement=\"bottomLeft\">\n          <Col className=\"icon\">\n            <TranslationOutlined />\n          </Col>\n        </Dropdown>\n      </Row>\n    </>\n  );\n};\nconst AvatarMenu = () => {\n  return (\n    <Menu>\n      <Menu.Item>\n        <a>退出登录</a>\n      </Menu.Item>\n      <Menu.Item>\n        <a>个人资料</a>\n      </Menu.Item>\n    </Menu>\n  );\n};\nconst MsgMenu = () => {\n  return (\n    <Menu>\n      <Menu.Item>\n        <a>English</a>\n      </Menu.Item>\n      <Menu.Item>\n        <a>中文</a>\n      </Menu.Item>\n    </Menu>\n  );\n};\nconst LangMenu = () => {\n  return (\n    <Menu>\n      <Menu.Item>\n        <a>English</a>\n      </Menu.Item>\n      <Menu.Item>\n        <a>中文</a>\n      </Menu.Item>\n    </Menu>\n  );\n};\nexport default Header;\n","import React, { FC, useState, useEffect } from 'react';\nimport './index.scss';\nimport { Layout, Row, Drawer } from 'antd';\nimport { IConfig } from '../../../util/config';\nimport FooterContent from '../../../components/footer';\nimport Menu from '../../../components/menu';\nimport logo from '../../../asserts/logo.svg';\nimport GlobalHeader from '../../../components/header';\n\nconst { Header, Footer, Sider, Content } = Layout;\ninterface ITitleStyle {\n  display: string;\n}\nconst LeftMenuLayout: FC<IConfig> = (props) => {\n  const { layoutMode, fixHeader, theme, language } = props;\n  /* 控制drawer菜单 */\n  const [isMenuOpen, setIsMenuOpen] = useState<boolean>(false);\n  const [titleStyle, setTitleStyle] = useState({\n    display: 'none'\n  });\n  useEffect((): any => {\n    window.addEventListener('resize', () => {\n      if (document.body.clientWidth >= 576) {\n        setMobileStatus(false);\n      } else {\n        setMobileStatus(true);\n      }\n    });\n    return () => {\n      window.removeEventListener('resize', () => {\n        console.log('resize被移除');\n      });\n    };\n  }, []);\n  /* 控制侧边菜单 */\n  const [isCollapsed, setCollapsed] = useState<boolean>(true);\n  const [isMobile, setMobileStatus] = useState<boolean>(false);\n  let changeTitleStatus = () => {\n    if (titleStyle.display === 'none') {\n      setTitleStyle({\n        display: 'inline-block'\n      });\n    } else {\n      setTitleStyle({\n        display: 'none'\n      });\n    }\n  };\n  const handleCollapse: () => void = () => {\n    changeTitleStatus();\n    setCollapsed(!isCollapsed);\n  };\n  const XSider = (\n    <Sider\n      breakpoint=\"md\"\n      collapsible={true}\n      collapsed={isCollapsed}\n      className=\"siderShow sider\"\n      onBreakpoint={() => {\n        //setMobileStatus(!isMobile);\n        handleCollapse();\n      }}\n      trigger={null}\n    >\n      <Row justify=\"center\" align=\"middle\" className=\"sider__logo\">\n        <a>\n          <img src={logo} alt=\"\" />\n          <h1 style={titleStyle}>ant design pro</h1>\n        </a>\n      </Row>\n      <Menu language={language} theme={theme} layoutMode={layoutMode} fixHeader={fixHeader} />\n    </Sider>\n  );\n  const DrawerSider = (\n    <div className=\"LeftMenuLayout__container\">\n      <Sider trigger={null} collapsible={true} className=\"sider\">\n        <Row justify=\"center\" align=\"middle\" className=\"sider__logo\">\n          <a>\n            <img src={logo} alt=\"\" />\n            <h1>ant design pro</h1>\n          </a>\n        </Row>\n        <Menu language={language} theme={theme} layoutMode={layoutMode} fixHeader={fixHeader} />\n      </Sider>\n    </div>\n  );\n  return (\n    <>\n      <Layout className=\"LeftMenuLayout__container\">\n        {XSider}\n        <Layout>\n          <Header className=\"header\">\n            <GlobalHeader\n              handleCollapsed={handleCollapse}\n              isMenuOpen={isMenuOpen}\n              setIsMenuOpen={setIsMenuOpen}\n              isMobile={isMobile}\n            />\n          </Header>\n          <Content>{props.children}</Content>\n          <Footer>\n            <FooterContent />\n          </Footer>\n        </Layout>\n      </Layout>\n      <Drawer\n        headerStyle={{ display: 'none' }}\n        placement=\"left\"\n        closable={false}\n        onClose={() => {\n          setIsMenuOpen(false);\n        }}\n        visible={isMenuOpen}\n        width=\"200\"\n        bodyStyle={{ padding: 0 }}\n      >\n        {DrawerSider}\n      </Drawer>\n    </>\n  );\n};\nexport default LeftMenuLayout;\n","import React, { FC } from 'react';\nimport './index.scss';\nimport { Layout } from 'antd';\nimport { IConfig } from '../../../util/config';\nimport FooterContent from '../../../components/footer';\nimport Menu from '../../../components/menu';\nconst { Header, Footer, Sider, Content } = Layout;\nconst TopMenuLayout: FC<IConfig> = (props) => {\n  const { layoutMode, fixHeader, theme, language, showFooter, children } = props;\n  return (\n    <Layout className=\"toplayout__container\">\n      <Header>\n        <Menu language={language} theme={theme} layoutMode={layoutMode} fixHeader={fixHeader} />\n      </Header>\n      <Content>Content</Content>\n      <Footer>\n        <FooterContent />\n      </Footer>\n    </Layout>\n  );\n};\nexport default TopMenuLayout;\n","import React, { FC } from 'react';\nimport './index.scss';\nimport LeftMenuLayout from './leftMenuLayout';\nimport TopMenuLayout from './topMenuLayout';\nimport { IConfig, config } from '../../util/config';\nconst MenuLayout: FC = (props) => {\n  const localConfig = localStorage.getItem('config');\n  let configObj: IConfig = config;\n  if (localConfig) {\n    configObj = JSON.parse(localConfig!);\n  }\n  let { layoutMode } = configObj;\n  if (layoutMode === 'top') {\n    return <TopMenuLayout {...configObj}>{props.children}</TopMenuLayout>;\n  } else {\n    return <LeftMenuLayout {...configObj}>{props.children}</LeftMenuLayout>;\n  }\n};\nexport default MenuLayout;\n"],"sourceRoot":""}