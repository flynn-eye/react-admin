{"version":3,"sources":["router/menuList.ts","components/menu/index.tsx","layout/menuLayout/leftMenuLayout/index.tsx","layout/menuLayout/topMenuLayout/index.tsx","layout/menuLayout/index.tsx","components/footer/index.tsx","asserts/logo.svg"],"names":["menuList","name","path","icon","DashboardOutlined","UserOutlined","WarningOutlined","children","FormOutlined","SubMenu","AMenu","Item","handleMenu","key","map","item","index","title","Menu","props","layoutMode","theme","fixHeader","menuTheme","language","mode","menuClassName","className","Header","Layout","Footer","Sider","Content","LeftMenuLayout","showFooter","useState","display","titleStyle","setTitleStyle","onCollapse","console","log","breakpoint","collapsible","justify","align","src","logo","alt","style","TopMenuLayout","MenuLayout","localConfig","localStorage","getItem","configObj","config","JSON","parse"],"mappings":"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","file":"static/js/6.130abca4.chunk.js","sourcesContent":["import { DashboardOutlined, WarningOutlined, FormOutlined, UserOutlined } from '@ant-design/icons';\nexport interface IMenu {\n  name: string;\n  children?: IMenu[];\n  icon?: any;\n  path?: string;\n}\nconst menuList: IMenu[] = [\n  {\n    name: 'Dashboard',\n    path: '/dashboard',\n    icon: DashboardOutlined\n  },\n  {\n    name: '布局',\n    path: '/menuLayout',\n    icon: UserOutlined\n  },\n  {\n    name: '异常',\n    icon: WarningOutlined,\n    children: [\n      {\n        name: '403',\n        path: '/error/403'\n      },\n      {\n        name: '404',\n        path: '/error/404'\n      }\n    ]\n  },\n  {\n    name: '三级表',\n    icon: FormOutlined,\n    children: [\n      {\n        name: '403',\n        path: '/error/403',\n        children: [\n          {\n            name: '403',\n            path: '/error/403'\n          },\n          {\n            name: '404',\n            path: '/error/404'\n          }\n        ]\n      },\n      {\n        name: '404',\n        path: '/error/404'\n      }\n    ]\n  }\n];\nexport default menuList;\n","import React, { FC, Component } from 'react';\nimport './index.scss';\nimport { Menu as AMenu } from 'antd';\nimport { MenuMode } from 'antd/lib/menu';\nimport { MenuTheme } from 'antd/lib/menu/MenuContext';\nimport { ELayoutMode, ETheme, Elanguage } from '../../util/config';\nimport menuList, { IMenu } from '../../router/menuList';\ninterface IProps {\n  layoutMode: ELayoutMode;\n  fixHeader: Boolean;\n  theme: ETheme;\n  language: Elanguage;\n}\nconst { Item, SubMenu } = AMenu;\nconst Menu: FC<IProps> = (props) => {\n  const { layoutMode, fixHeader, theme, language } = props;\n  let menuTheme: MenuTheme = 'dark';\n  if (theme !== 'dark') {\n    menuTheme = 'light';\n  }\n  let mode: MenuMode = layoutMode === 'top' ? 'horizontal' : 'inline';\n  let menuClassName = 'menu__container-' + mode;\n  return (\n    <AMenu className={menuClassName} mode={mode} theme={menuTheme}>\n      {handleMenu(menuList, 0)}\n    </AMenu>\n  );\n};\nfunction handleMenu(menuList: IMenu[], key: number = 0): any[] {\n  return menuList.map((item, index) => {\n    if ('children' in item) {\n      return (\n        <SubMenu\n          key={key + '-' + item.name}\n          icon={item.icon ? <item.icon /> : null}\n          title={item.name}\n        >\n          {handleMenu(item.children!, key + 1)}\n        </SubMenu>\n      );\n    } else {\n      return (\n        <AMenu.Item\n          key={key + '-' + item.name + 'index'}\n          icon={item.icon ? <item.icon /> : null}\n          title={item.name}\n        >\n          {item.name}\n        </AMenu.Item>\n      );\n    }\n  });\n}\nexport default Menu;\n","import React, { FC, useState } from 'react';\nimport './index.scss';\nimport { Layout, Row } from 'antd';\nimport { IConfig } from '../../../util/config';\nimport FooterContent from '../../../components/footer';\nimport Menu from '../../../components/menu';\nimport logo from '../../../asserts/logo.svg';\nconst { Header, Footer, Sider, Content } = Layout;\ninterface ITitleStyle {\n  display: string;\n}\nconst LeftMenuLayout: FC<IConfig> = (props) => {\n  const { layoutMode, fixHeader, theme, language, showFooter, children } = props;\n  let [titleStyle, setTitleStyle] = useState({\n    display: 'inline-block'\n  });\n  let changeTitleStatus = () => {\n    console.log(titleStyle);\n    if (titleStyle.display === 'none') {\n      setTitleStyle({\n        display: 'inline-block'\n      });\n    } else {\n      setTitleStyle({\n        display: 'none'\n      });\n    }\n  };\n  return (\n    <Layout className=\"LeftMenuLayout__container\">\n      <Sider\n        onCollapse={() => changeTitleStatus()}\n        breakpoint=\"md\"\n        collapsible={true}\n        className=\"sider\"\n      >\n        <Row justify=\"center\" align=\"middle\" className=\"sider__logo\">\n          <a>\n            <img src={logo} alt=\"\" />\n            <h1 style={titleStyle}>ant design pro</h1>\n          </a>\n        </Row>\n        <Menu language={language} theme={theme} layoutMode={layoutMode} fixHeader={fixHeader} />\n      </Sider>\n      <Layout>\n        <Header className=\"header\"></Header>\n        <Content>Content</Content>\n        <Footer>\n          <FooterContent />\n        </Footer>\n      </Layout>\n    </Layout>\n  );\n};\nexport default LeftMenuLayout;\n","import React, { FC } from 'react';\nimport './index.scss';\nimport { Layout } from 'antd';\nimport { IConfig } from '../../../util/config';\nimport FooterContent from '../../../components/footer';\nimport Menu from '../../../components/menu';\nconst { Header, Footer, Sider, Content } = Layout;\nconst TopMenuLayout: FC<IConfig> = (props) => {\n  const { layoutMode, fixHeader, theme, language, showFooter, children } = props;\n  return (\n    <Layout className=\"toplayout__container\">\n      <Header>\n        <Menu language={language} theme={theme} layoutMode={layoutMode} fixHeader={fixHeader} />\n      </Header>\n      <Content>Content</Content>\n      <Footer>\n        <FooterContent />\n      </Footer>\n    </Layout>\n  );\n};\nexport default TopMenuLayout;\n","import React from 'react';\nimport './index.scss';\nimport LeftMenuLayout from './leftMenuLayout';\nimport TopMenuLayout from './topMenuLayout';\nimport { IConfig, config } from '../../util/config';\nconst MenuLayout = () => {\n  const localConfig = localStorage.getItem('config');\n  let configObj: IConfig = config;\n  if (localConfig) {\n    configObj = JSON.parse(localConfig!);\n  }\n  let { layoutMode } = configObj;\n  if (layoutMode === 'top') {\n    return <TopMenuLayout {...configObj} />;\n  } else {\n    return <LeftMenuLayout {...configObj} />;\n  }\n};\nexport default MenuLayout;\n","import React from 'react';\nimport { Row, Col } from 'antd';\nimport './index.scss';\nimport { GithubOutlined, CopyrightOutlined } from '@ant-design/icons';\n\nconst Footer = () => {\n  return (\n    <div className=\"footer__container\">\n      <Row justify=\"center\">\n        <a className=\"link-hover\">Ant Design Pro</a>\n        <GithubOutlined className=\"footer__githubLogo\" />\n        <a className=\"link-hover\">Ant Design</a>\n      </Row>\n      <Row justify=\"center\">\n        <span>Copyright</span>\n        <CopyrightOutlined className=\"footer__copyright\" />\n        <span>2019 蚂蚁金服体验技术部出品</span>\n      </Row>\n    </div>\n  );\n};\nexport default Footer;\n","export default __webpack_public_path__ + \"static/media/logo.f0355d39.svg\";"],"sourceRoot":""}